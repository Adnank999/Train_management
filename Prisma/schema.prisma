// schema.prisma

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model TrainService {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  type     String
  schedule Schedule[]
  tickets  Ticket[]
}

model Schedule {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  trainServiceId String   @db.ObjectId
  stationId      String   @db.ObjectId
  arrivalTime    DateTime
  departureTime  DateTime

  trainService   TrainService @relation(fields: [trainServiceId], references: [id])
  station        Station      @relation(fields: [stationId], references: [id])
}

model Station {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  latitude Float
  longitude Float                      
  trains   Schedule[]
  ticketsStart Ticket[] @relation("TicketStart")
  ticketsEnd   Ticket[] @relation("TicketEnd")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  password String
  wallet   Wallet?
  tickets  Ticket[]
}

model Wallet {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  balance   Float
  user      User     @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  walletId  String   @db.ObjectId
  amount    Float
  date      DateTime
  type      String

  wallet    Wallet   @relation(fields: [walletId], references: [id])
}

model Ticket {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @db.ObjectId
  trainServiceId  String   @db.ObjectId
  stationIdStart  String   @db.ObjectId
  stationIdEnd    String   @db.ObjectId
  purchaseDate    DateTime
  travelDate      DateTime
  price           Float

  user            User          @relation(fields: [userId], references: [id])
  trainService    TrainService  @relation(fields: [trainServiceId], references: [id])
  stationStart    Station       @relation("TicketStart", fields: [stationIdStart], references: [id])
  stationEnd      Station       @relation("TicketEnd", fields: [stationIdEnd], references: [id])
}
